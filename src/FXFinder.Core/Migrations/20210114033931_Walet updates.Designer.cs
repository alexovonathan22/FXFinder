// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using FXFinder.Core.DataAccess;

namespace FXFinder.Core.Migrations
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20210114033931_Walet updates")]
    partial class Waletupdates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FXFinder.Core.DBModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 1, 14, 4, 39, 31, 322, DateTimeKind.Local).AddTicks(9173),
                            Email = "aov.nathan@gmail.com",
                            PasswordHash = new byte[] { 81, 116, 142, 140, 162, 175, 222, 158, 39, 236, 43, 97, 122, 201, 125, 62, 32, 110, 71, 242, 191, 215, 183, 76, 173, 16, 217, 97, 201, 77, 57, 232, 195, 19, 80, 223, 127, 174, 46, 107, 171, 144, 225, 92, 31, 52, 31, 254, 13, 132, 163, 241, 100, 164, 218, 1, 81, 211, 255, 10, 36, 92, 91, 252 },
                            PasswordSalt = new byte[] { 190, 188, 228, 15, 66, 195, 171, 35, 165, 240, 206, 223, 33, 14, 204, 3, 99, 99, 68, 211, 227, 80, 23, 134, 56, 145, 209, 232, 160, 0, 6, 226, 227, 150, 5, 68, 136, 182, 97, 26, 107, 78, 164, 90, 130, 113, 68, 73, 66, 13, 178, 122, 206, 115, 74, 199, 252, 192, 204, 184, 56, 212, 90, 170, 66, 247, 202, 28, 9, 194, 1, 217, 95, 238, 112, 83, 199, 181, 142, 3, 140, 212, 191, 204, 252, 94, 82, 253, 20, 25, 191, 135, 190, 229, 178, 225, 134, 13, 131, 81, 2, 66, 179, 79, 24, 149, 63, 195, 240, 246, 159, 73, 100, 51, 119, 115, 159, 35, 10, 182, 148, 97, 79, 96, 184, 131, 253, 223 },
                            Role = "Administrator",
                            Username = "The Admin"
                        });
                });

            modelBuilder.Entity("FXFinder.Core.DBModels.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcctDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrnencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrandAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsCurrencyConverted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFundApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WalletAccts");
                });

            modelBuilder.Entity("FXFinder.Core.DBModels.Wallet", b =>
                {
                    b.HasOne("FXFinder.Core.DBModels.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
