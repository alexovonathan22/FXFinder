// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using FXFinder.Core.DataAccess;

namespace FXFinder.Core.Migrations
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20210114222936_Changed connstr")]
    partial class Changedconnstr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FXFinder.Core.DBModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 1, 14, 23, 29, 35, 981, DateTimeKind.Local).AddTicks(3632),
                            Email = "avo.nathan@gmail.com",
                            PasswordHash = new byte[] { 254, 54, 79, 213, 193, 157, 140, 15, 167, 219, 27, 207, 51, 58, 45, 243, 82, 12, 231, 159, 3, 175, 200, 95, 25, 69, 231, 248, 138, 23, 230, 73, 199, 26, 128, 251, 130, 202, 150, 101, 216, 192, 201, 171, 67, 2, 177, 240, 139, 244, 138, 22, 53, 142, 170, 213, 244, 32, 187, 167, 35, 158, 215, 163 },
                            PasswordSalt = new byte[] { 181, 97, 87, 166, 125, 79, 145, 13, 184, 227, 8, 250, 245, 140, 181, 125, 14, 127, 5, 32, 94, 217, 47, 81, 107, 68, 166, 5, 191, 96, 89, 138, 102, 205, 237, 241, 144, 43, 170, 133, 61, 91, 83, 157, 164, 15, 107, 177, 188, 46, 72, 9, 198, 10, 153, 82, 73, 14, 155, 189, 92, 121, 96, 197, 71, 92, 191, 196, 46, 156, 139, 158, 26, 12, 169, 81, 107, 161, 174, 78, 95, 235, 12, 178, 207, 19, 74, 179, 158, 190, 90, 195, 153, 28, 55, 52, 5, 7, 30, 7, 110, 140, 185, 184, 29, 101, 159, 45, 183, 20, 13, 1, 116, 11, 214, 230, 5, 57, 12, 67, 128, 19, 38, 154, 218, 82, 195, 209 },
                            Role = "Administrator",
                            Username = "adminovo"
                        });
                });

            modelBuilder.Entity("FXFinder.Core.DBModels.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcctDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrnencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrandAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsCurrencyConverted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFundApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WalletAccts");
                });

            modelBuilder.Entity("FXFinder.Core.DBModels.Wallet", b =>
                {
                    b.HasOne("FXFinder.Core.DBModels.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
