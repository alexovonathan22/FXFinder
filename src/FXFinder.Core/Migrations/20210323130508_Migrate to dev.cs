using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace FXFinder.Core.Migrations
{
    public partial class Migratetodev : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedAt", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2021, 3, 23, 14, 5, 7, 380, DateTimeKind.Local).AddTicks(9805), new byte[] { 130, 71, 62, 112, 176, 71, 114, 55, 26, 182, 201, 137, 124, 90, 73, 134, 179, 210, 1, 113, 227, 109, 247, 73, 180, 26, 135, 10, 221, 58, 17, 113, 182, 88, 196, 234, 11, 77, 235, 186, 0, 127, 123, 170, 217, 238, 233, 131, 133, 151, 98, 26, 99, 150, 240, 110, 49, 8, 23, 117, 88, 174, 136, 145 }, new byte[] { 204, 230, 165, 253, 66, 164, 79, 253, 15, 93, 52, 117, 208, 232, 249, 61, 144, 1, 35, 226, 24, 81, 56, 188, 122, 199, 87, 186, 51, 118, 122, 223, 35, 133, 149, 2, 169, 229, 186, 213, 181, 58, 146, 251, 83, 51, 180, 197, 180, 198, 211, 112, 228, 252, 6, 213, 37, 35, 26, 83, 54, 247, 128, 139, 111, 169, 155, 158, 44, 187, 79, 254, 11, 40, 213, 154, 123, 77, 239, 187, 248, 185, 75, 107, 194, 186, 43, 163, 118, 166, 249, 12, 3, 173, 218, 8, 128, 244, 245, 223, 254, 152, 85, 184, 119, 205, 71, 233, 117, 89, 26, 63, 173, 10, 104, 237, 223, 215, 42, 47, 28, 88, 53, 134, 106, 162, 241, 229 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedAt", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2021, 3, 22, 16, 58, 10, 158, DateTimeKind.Local).AddTicks(4828), new byte[] { 249, 54, 1, 226, 149, 109, 207, 95, 138, 168, 129, 114, 173, 80, 138, 248, 161, 51, 16, 143, 135, 144, 187, 3, 5, 159, 28, 151, 194, 226, 200, 247, 123, 93, 219, 82, 201, 120, 45, 98, 31, 223, 165, 223, 176, 166, 15, 66, 192, 135, 42, 5, 242, 202, 79, 249, 147, 11, 183, 75, 157, 157, 36, 73 }, new byte[] { 232, 21, 212, 151, 74, 146, 63, 251, 12, 58, 31, 45, 92, 106, 95, 162, 218, 254, 176, 15, 174, 185, 62, 253, 115, 61, 211, 32, 252, 78, 125, 191, 7, 82, 2, 132, 155, 22, 139, 135, 51, 175, 51, 225, 158, 112, 106, 204, 35, 178, 120, 17, 19, 167, 67, 202, 85, 117, 127, 88, 38, 211, 255, 200, 92, 234, 52, 49, 226, 224, 144, 197, 149, 100, 251, 244, 58, 117, 201, 36, 176, 49, 158, 189, 214, 104, 243, 181, 3, 245, 125, 220, 190, 99, 0, 177, 144, 18, 27, 34, 69, 26, 235, 130, 121, 59, 16, 93, 93, 0, 52, 242, 238, 46, 199, 203, 227, 75, 232, 252, 1, 177, 167, 33, 200, 7, 229, 169 } });
        }
    }
}
